/**
 * Kindergarten API
 * This is the API for Kindergarten
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Note;
import io.swagger.client.model.Presence;
import io.swagger.client.model.User;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Child {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("parent")
  private User parent = null;
  @SerializedName("presence")
  private List<Presence> presence = null;
  @SerializedName("notes")
  private List<Note> notes = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public User getParent() {
    return parent;
  }
  public void setParent(User parent) {
    this.parent = parent;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<Presence> getPresence() {
    return presence;
  }
  public void setPresence(List<Presence> presence) {
    this.presence = presence;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<Note> getNotes() {
    return notes;
  }
  public void setNotes(List<Note> notes) {
    this.notes = notes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Child child = (Child) o;
    return (this.id == null ? child.id == null : this.id.equals(child.id)) &&
        (this.name == null ? child.name == null : this.name.equals(child.name)) &&
        (this.parent == null ? child.parent == null : this.parent.equals(child.parent)) &&
        (this.presence == null ? child.presence == null : this.presence.equals(child.presence)) &&
        (this.notes == null ? child.notes == null : this.notes.equals(child.notes));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.parent == null ? 0: this.parent.hashCode());
    result = 31 * result + (this.presence == null ? 0: this.presence.hashCode());
    result = 31 * result + (this.notes == null ? 0: this.notes.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Child {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  parent: ").append(parent).append("\n");
    sb.append("  presence: ").append(presence).append("\n");
    sb.append("  notes: ").append(notes).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
